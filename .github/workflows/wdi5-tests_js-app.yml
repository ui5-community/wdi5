name: JS-app

on:
  pull_request:
    branches:
      - main
      - v9-support

    paths:
      # relevant
      - "client-side-js/**"
      - "examples/**"
      - "scripts/**"
      - "src/**"
      # don't run on changes to these
      - "!.husky/**"
      - "!.vscode/**"
      - "!docs/**"
      - "!.*"
      - "!*.md"
      - "!*.cjs"

jobs:
  tests:
    ### revisit: when chrome 138 does not make any more issues => go back to latest
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      ### no mas since wdio^8 allows for auto-download of matching chromedriver for the env
      ### -> we save CI time!
      ### yet leaving this as ref
      # - name: update chrome
      #   run: |
      #     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      #     sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      #     sudo apt-get update
      #     sudo apt-get --only-upgrade install google-chrome-stable
      #     # check chrome version
      #     google-chrome --version

      - name: check out repo
        uses: actions/checkout@v4

      - name: use node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      # install both module + sample app(s) deps
      - name: install packages (wdi5 + sample app(s))
        run: |
          npm pkg delete scripts.prepare
          npm ci

      # build things
      - name: build
        run: npm run build

      # run wdi5 tests within CJS app/env
      - name: test CJS js-app
        run: npm run test:cjs

      # run wdi5 tests within ESM app/env
      - name: test ESM js-app
        run: npm run test:mjs

      # run wdi5 tests WebdriverIO Classic Protocol
      - name: test wdio classic
        run: npm run test:classic

      # run wdi5 tests Cucumber
      - name: test cucumber
        run: npm run test:cucumber

      # run wdi5 tests UI5 LTS versions
      - name: test UI5 LTS versions
        run: npm run test:ui5:lts

      # run wdi5 tests for UI5 v1
      - name: test UI5 v1 app
        run: npm run test:ui5:app:v1

      # run wdi5 tests for UI5 v2
      - name: test UI5 v2 app
        run: npm run test:ui5:app:v2
